
import { useState } from 'react';
import { useParams, useNavigate, useSearchParams, Link } from 'react-router-dom';
import { ChevronLeft, CreditCard, Ticket, CheckCircle } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Separator } from '@/components/ui/separator';
import { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';
import { useToast } from '@/components/ui/use-toast';
import Navbar from '@/components/Navbar';
import Footer from '@/components/Footer';
import { events } from '@/data/events';
import { Customer } from '@/types';
import NotFound from './NotFound';

const Checkout = () => {
  const { id } = useParams<{ id: string }>();
  const [searchParams] = useSearchParams();
  const quantity = parseInt(searchParams.get('quantity') || '1');
  const navigate = useNavigate();
  const { toast } = useToast();
  
  const [customer, setCustomer] = useState<Customer>({
    name: '',
    email: '',
    phone: ''
  });
  
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isSuccess, setIsSuccess] = useState(false);
  const [showTicket, setShowTicket] = useState(false);
  const [ticketId, setTicketId] = useState('');
  
  const event = events.find(e => e.id === id);
  
  if (!event) {
    return <NotFound />;
  }

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('ne-NP', {
      style: 'currency',
      currency: 'NPR',
      minimumFractionDigits: 0
    }).format(price);
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setCustomer(prev => ({ ...prev, [name]: value }));
  };

  const validateForm = () => {
    if (!customer.name.trim()) {
      toast({
        title: "Name required",
        description: "Please enter your full name",
        variant: "destructive"
      });
      return false;
    }
    
    if (!customer.email.trim() || !/^\S+@\S+\.\S+$/.test(customer.email)) {
      toast({
        title: "Valid email required",
        description: "Please enter a valid email address",
        variant: "destructive"
      });
      return false;
    }
    
    if (!customer.phone.trim() || !/^\d{10}$/.test(customer.phone.replace(/\D/g, ''))) {
      toast({
        title: "Valid phone required",
        description: "Please enter a valid 10-digit phone number",
        variant: "destructive"
      });
      return false;
    }
    
    return true;
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!validateForm()) return;
    
    setIsSubmitting(true);
    
    // Simulate API call
    setTimeout(() => {
      setIsSubmitting(false);
      setIsSuccess(true);
      
      // Generate a ticket ID
      const randomId = Math.random().toString(36).substring(2, 12).toUpperCase();
      setTicketId(`TKT-${randomId}`);
      
      toast({
        title: "Booking Successful!",
        description: "Your tickets have been booked successfully.",
      });
      
      // Simulate delay before showing ticket
      setTimeout(() => {
        setShowTicket(true);
      }, 1500);
    }, 2000);
  };

  const handleDownloadTicket = () => {
    // Create a virtual element
    const element = document.createElement('a');
    // Set its href attribute to the ticket URL (would normally be generated by backend)
    element.setAttribute('href', '#');
    element.setAttribute('download', `ticket-${event.id}-${ticketId}.pdf`);
    
    // Simulate ticket download
    toast({
      title: "Ticket Downloaded",
      description: "Your digital ticket has been downloaded successfully.",
    });
    
    // Redirect to home after 2 seconds
    setTimeout(() => {
      navigate('/');
    }, 2000);
  };

  if (showTicket) {
    return (
      <>
        <Navbar />
        <div className="bg-white dark:bg-gray-900 min-h-[80vh] flex items-center justify-center">
          <div className="container max-w-md mx-auto px-4 py-10">
            <div className="text-center mb-6">
              <CheckCircle className="h-16 w-16 text-green-500 mx-auto mb-4" />
              <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">Booking Confirmed!</h1>
              <p className="text-gray-600 dark:text-gray-300">
                Your tickets for {event.title} have been booked.
              </p>
            </div>
            
            <div className="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden shadow-md mb-6">
              <div className="p-4 bg-nepal-red/10 border-b border-nepal-red/20">
                <div className="flex justify-between items-center">
                  <div>
                    <h3 className="text-sm font-medium text-gray-600 dark:text-gray-300">E-Ticket</h3>
                    <p className="text-lg font-bold text-gray-900 dark:text-white">{ticketId}</p>
                  </div>
                  <Ticket className="h-8 w-8 text-nepal-red" />
                </div>
              </div>
              
              <div className="p-4">
                <h2 className="font-serif text-xl font-bold text-gray-900 dark:text-white mb-2">{event.title}</h2>
                
                <div className="space-y-2 mb-4">
                  <div className="flex justify-between">
                    <span className="text-sm text-gray-600 dark:text-gray-300">Date & Time</span>
                    <span className="text-sm font-medium text-gray-900 dark:text-white">
                      {new Date(event.date).toLocaleDateString()}, {event.time}
                    </span>
                  </div>
                  
                  <div className="flex justify-between">
                    <span className="text-sm text-gray-600 dark:text-gray-300">Location</span>
                    <span className="text-sm font-medium text-gray-900 dark:text-white">{event.location}</span>
                  </div>
                  
                  <div className="flex justify-between">
                    <span className="text-sm text-gray-600 dark:text-gray-300">Quantity</span>
                    <span className="text-sm font-medium text-gray-900 dark:text-white">{quantity} ticket(s)</span>
                  </div>
                  
                  <div className="flex justify-between">
                    <span className="text-sm text-gray-600 dark:text-gray-300">Customer</span>
                    <span className="text-sm font-medium text-gray-900 dark:text-white">{customer.name}</span>
                  </div>
                </div>
                
                <div className="mt-3 pt-3 border-t border-gray-200 dark:border-gray-700">
                  <div className="bg-gray-100 dark:bg-gray-700 p-3 rounded text-center">
                    <p className="text-xs text-gray-600 dark:text-gray-300 mb-1">Scan this QR code at the event entrance</p>
                    <div className="bg-white dark:bg-gray-600 h-32 w-32 mx-auto rounded flex items-center justify-center">
                      <div className="w-24 h-24 bg-[repeating-linear-gradient(45deg,#000,#000_4px,#fff_4px,#fff_8px)] dark:bg-[repeating-linear-gradient(45deg,#fff,#fff_4px,#444_4px,#444_8px)]"></div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <div className="flex flex-col gap-4">
              <Button 
                variant="default" 
                className="w-full bg-nepal-red hover:bg-nepal-red/90"
                onClick={handleDownloadTicket}
              >
                Download Ticket
              </Button>
              
              <Button 
                variant="outline" 
                className="w-full"
                onClick={() => navigate('/')}
              >
                Return to Home
              </Button>
            </div>
          </div>
        </div>
        <Footer />
      </>
    );
  }

  return (
    <>
      <Navbar />
      <div className="bg-gray-50 dark:bg-gray-900 py-10">
        <div className="container mx-auto px-4 max-w-4xl">
          <Link 
            to={`/events/${event.id}`} 
            className="inline-flex items-center text-sm font-medium text-nepal-red hover:text-nepal-red/90 mb-6"
          >
            <ChevronLeft className="mr-1 h-4 w-4" />
            Back to event
          </Link>
          
          {isSuccess ? (
            <div className="text-center py-16">
              <div className="animate-spin mb-6">
                <Ticket className="h-12 w-12 text-nepal-red mx-auto" />
              </div>
              <h2 className="text-2xl font-bold mb-2">Generating your tickets...</h2>
              <p className="text-gray-600 dark:text-gray-300">Please wait while we prepare your digital tickets.</p>
            </div>
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-5 gap-8">
              <div className="md:col-span-3">
                <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-6">
                  <h1 className="text-2xl font-bold mb-6">Checkout</h1>
                  
                  <form onSubmit={handleSubmit}>
                    <div className="space-y-6">
                      <div>
                        <h2 className="text-lg font-semibold mb-4">Your Information</h2>
                        <div className="space-y-4">
                          <div>
                            <Label htmlFor="name">Full Name</Label>
                            <Input
                              id="name"
                              name="name"
                              value={customer.name}
                              onChange={handleInputChange}
                              placeholder="Enter your full name"
                              required
                            />
                          </div>
                          
                          <div>
                            <Label htmlFor="email">Email Address</Label>
                            <Input
                              id="email"
                              name="email"
                              type="email"
                              value={customer.email}
                              onChange={handleInputChange}
                              placeholder="Enter your email address"
                              required
                            />
                            <p className="text-xs text-gray-500 mt-1">We'll email your tickets to this address</p>
                          </div>
                          
                          <div>
                            <Label htmlFor="phone">Phone Number</Label>
                            <Input
                              id="phone"
                              name="phone"
                              type="tel"
                              value={customer.phone}
                              onChange={handleInputChange}
                              placeholder="Enter your phone number"
                              required
                            />
                          </div>
                        </div>
                      </div>
                      
                      <Separator />
                      
                      <div>
                        <h2 className="text-lg font-semibold mb-4">Payment Method</h2>
                        <Tabs defaultValue="card" className="w-full">
                          <TabsList className="grid w-full grid-cols-3">
                            <TabsTrigger value="card">Card</TabsTrigger>
                            <TabsTrigger value="khalti">Khalti</TabsTrigger>
                            <TabsTrigger value="esewa">eSewa</TabsTrigger>
                          </TabsList>
                          
                          <TabsContent value="card" className="space-y-4 mt-4">
                            <div>
                              <Label htmlFor="cardNumber">Card Number</Label>
                              <Input
                                id="cardNumber"
                                placeholder="1234 5678 9012 3456"
                              />
                            </div>
                            
                            <div className="grid grid-cols-2 gap-4">
                              <div>
                                <Label htmlFor="expiry">Expiry Date</Label>
                                <Input
                                  id="expiry"
                                  placeholder="MM/YY"
                                />
                              </div>
                              
                              <div>
                                <Label htmlFor="cvc">CVC</Label>
                                <Input
                                  id="cvc"
                                  placeholder="123"
                                />
                              </div>
                            </div>
                          </TabsContent>
                          
                          <TabsContent value="khalti" className="pt-4">
                            <div className="text-center p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
                              <p className="mb-3">Continue to pay with Khalti</p>
                              <img 
                                src="https://seeklogo.com/images/K/khalti-logo-F0B049E68F-seeklogo.com.png" 
                                alt="Khalti Logo" 
                                className="h-8 mx-auto"
                              />
                            </div>
                          </TabsContent>
                          
                          <TabsContent value="esewa" className="pt-4">
                            <div className="text-center p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
                              <p className="mb-3">Continue to pay with eSewa</p>
                              <img 
                                src="https://esewa.com.np/common/images/esewa_logo.png" 
                                alt="eSewa Logo" 
                                className="h-8 mx-auto"
                              />
                            </div>
                          </TabsContent>
                        </Tabs>
                      </div>
                      
                      <Button 
                        type="submit" 
                        className="w-full bg-nepal-red hover:bg-nepal-red/90"
                        disabled={isSubmitting}
                      >
                        {isSubmitting ? (
                          <>Processing...</>
                        ) : (
                          <>
                            <CreditCard className="mr-2 h-4 w-4" />
                            Pay {formatPrice(event.price * quantity)}
                          </>
                        )}
                      </Button>
                    </div>
                  </form>
                </div>
              </div>
              
              <div className="md:col-span-2">
                <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 sticky top-24">
                  <h2 className="text-lg font-semibold mb-4">Order Summary</h2>
                  
                  <div className="flex items-start gap-4 mb-4">
                    <div className="w-16 h-16 rounded overflow-hidden flex-shrink-0">
                      <img 
                        src={event.imageUrl} 
                        alt={event.title} 
                        className="w-full h-full object-cover"
                      />
                    </div>
                    
                    <div>
                      <h3 className="font-medium text-gray-900 dark:text-white">{event.title}</h3>
                      <p className="text-sm text-gray-500 dark:text-gray-400">
                        {new Date(event.date).toLocaleDateString()}, {event.time}
                      </p>
                      <p className="text-sm text-gray-500 dark:text-gray-400">{event.location}</p>
                    </div>
                  </div>
                  
                  <Separator className="my-4" />
                  
                  <div className="space-y-2">
                    <div className="flex justify-between">
                      <span>Price per ticket</span>
                      <span>{formatPrice(event.price)}</span>
                    </div>
                    
                    <div className="flex justify-between">
                      <span>Quantity</span>
                      <span>{quantity}</span>
                    </div>
                    
                    <div className="flex justify-between">
                      <span>Subtotal</span>
                      <span>{formatPrice(event.price * quantity)}</span>
                    </div>
                    
                    <div className="flex justify-between">
                      <span>Service fee</span>
                      <span>{formatPrice(event.price * quantity * 0.05)}</span>
                    </div>
                  </div>
                  
                  <Separator className="my-4" />
                  
                  <div className="flex justify-between font-bold text-lg">
                    <span>Total</span>
                    <span className="text-nepal-red">
                      {formatPrice(event.price * quantity * 1.05)}
                    </span>
                  </div>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
      <Footer />
    </>
  );
};

export default Checkout;
